<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Thu, 16 Nov 2023 14:50:26 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: artShow</title>
		<dateCreated>Mon, 02 Jul 2018 14:49:36 GMT</dateCreated>
		<dateModified>Thu, 16 Nov 2023 14:50:26 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 8, 9, 11, 15</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>117</windowTop>
		<windowLeft>856</windowLeft>
		<windowBottom>1097</windowBottom>
		<windowRight>2207</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/artshow2/" created="Fri, 10 Nov 2023 15:26:52 GMT">
			<outline text="worknotes.md" created="Thu, 16 Nov 2023 14:07:49 GMT">
				<outline text="#### 11/16/23; 9:07:59 AM by DW" created="Thu, 16 Nov 2023 14:07:51 GMT">
					<outline text="Replacing the previous Twitter-based artshow with one build on Bluesky. " created="Thu, 16 Nov 2023 14:08:01 GMT"/>
					</outline>
				</outline>
			<outline text="styles.css">
				<outline text="body {">
					<outline text="background-color: whitesmoke;"/>
					<outline text="font-family: Ubuntu;" created="Mon, 13 Nov 2023 03:08:26 GMT"/>
					<outline text="font-size: 18px;" created="Mon, 13 Nov 2023 03:08:41 GMT"/>
					<outline text="line-height: 140%;" created="Mon, 13 Nov 2023 03:08:45 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 800px;"/>
					<outline text="margin-top: 40px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-bottom: 400px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPausedMessage {">
					<outline text="height: 1.5em; " created="Mon, 13 Nov 2023 03:07:51 GMT"/>
					<outline text="}" created="Mon, 13 Nov 2023 03:07:24 GMT"/>
					</outline>
				<outline text="" created="Tue, 14 Nov 2023 20:27:18 GMT"/>
				<outline text=".divXmlLink {" isComment="true">
					<outline text="float: right;"/>
					<outline text="margin-top: 15px;"/>
					<outline text="width: 36px;"/>
					<outline text="height: 14px;"/>
					<outline text="background-color: orange;"/>
					<outline text="border: 1px solid darkorange;"/>
					<outline text="display: none;"/>
					<outline text="margin-bottom: 25px;" created="Wed, 25 May 2022 15:25:03 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divXmlLink a {">
					<outline text="text-decoration: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divXmlIcon:hover {">
					<outline text="background-color: darkorange;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divXmlIcon a {">
					<outline text="text-decoration: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divXmlIcon {">
					<outline text="color: white;"/>
					<outline text="font-size: 11px;"/>
					<outline text="text-align: center;"/>
					<outline text="font-weight: bold;"/>
					<outline text="margin-top: -3px;"/>
					<outline text="background-color: orange;"/>
					<outline text="border: 1px solid darkorange;"/>
					<outline text="width: 36px;"/>
					<outline text="height: 14px;" isComment="true"/>
					<outline text="margin-bottom: 25px;" created="Wed, 25 May 2022 15:25:03 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".spFeedTitle {" created="Tue, 14 Nov 2023 20:56:17 GMT">
					<outline text="font-size: 36px;" created="Tue, 14 Nov 2023 20:56:23 GMT"/>
					<outline text="}" created="Tue, 14 Nov 2023 20:56:30 GMT"/>
					</outline>
				<outline text=".imgArtImage {" created="Tue, 14 Nov 2023 21:09:26 GMT">
					<outline text="width: 550px;" created="Tue, 14 Nov 2023 21:09:35 GMT"/>
					<outline text="}" created="Tue, 14 Nov 2023 21:09:39 GMT"/>
					</outline>
				<outline text=".divColumnWrapper {" created="Fri, 01 Sep 2023 19:06:43 GMT">
					<outline text="display: table;"/>
					<outline text="width: 715px; "/>
					<outline text="border-collapse: separate; "/>
					<outline text="border-spacing: 5px 0;"/>
					<outline text="}" created="Fri, 01 Sep 2023 19:06:47 GMT"/>
					</outline>
				<outline text=".divOutlineColumn {">
					<outline text="display: table-cell;" created="Thu, 31 Aug 2023 14:51:59 GMT"/>
					<outline text="width: 165px;" created="Thu, 31 Aug 2023 14:52:12 GMT"/>
					<outline text="border: 1px solid silver;" isComment="true"/>
					<outline text="vertical-align: top;" created="Fri, 01 Sep 2023 21:41:53 GMT"/>
					<outline text="padding: 5px;" isComment="true"/>
					<outline text="background-color: white;" isComment="true"/>
					<outline text="margin-right: 5px;" created="Fri, 01 Sep 2023 18:59:51 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divOutliner {" created="Thu, 16 Nov 2023 13:38:22 GMT">
					<outline text="background-color: inherit;" created="Thu, 16 Nov 2023 13:38:25 GMT"/>
					<outline text="}" created="Thu, 16 Nov 2023 13:38:31 GMT"/>
					</outline>
				<outline text=".divOutlineColumn li {" isComment="true" created="Fri, 01 Sep 2023 21:43:32 GMT">
					<outline text="margin-bottom: 0;" created="Fri, 01 Sep 2023 21:43:53 GMT"/>
					<outline text="}" created="Fri, 01 Sep 2023 21:43:39 GMT"/>
					</outline>
				<outline text=".divImageColumn {" created="Thu, 31 Aug 2023 14:51:53 GMT">
					<outline text="display: table-cell;" created="Thu, 31 Aug 2023 14:51:59 GMT"/>
					<outline text="width: 550px;" created="Wed, 15 Nov 2023 15:50:39 GMT"/>
					<outline text="border: 1px solid silver;" isComment="true"/>
					<outline text="background-color: white;" isComment="true" created="Thu, 31 Aug 2023 15:51:29 GMT"/>
					<outline text="padding: 4px;" isComment="true" created="Fri, 01 Sep 2023 21:28:24 GMT"/>
					<outline text="min-height: 1200px;" created="Wed, 15 Nov 2023 15:59:13 GMT"/>
					<outline text="}" created="Thu, 31 Aug 2023 14:51:56 GMT"/>
					</outline>
				</outline>
			<outline text="code.js" created="Mon, 06 Jun 2022 15:20:22 GMT">
				<outline text="const myProductName = &quot;ArtShow2&quot;, myVersion = &quot;0.4.0&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Sun, 12 Nov 2023 18:56:06 GMT"/>
				<outline text="const appConsts = {" created="Tue, 14 Nov 2023 19:30:57 GMT">
					<outline text="serverUrl: &quot;https://feedland.com/&quot;," created="Tue, 14 Nov 2023 19:31:07 GMT"/>
					<outline text="readinglistUrl: &quot;https://lists.feedcorps.org/artshow.opml&quot;" created="Tue, 14 Nov 2023 19:31:21 GMT"/>
					<outline text="}" created="Tue, 14 Nov 2023 19:31:06 GMT"/>
					</outline>
				<outline text="var config = {" created="Sun, 12 Nov 2023 18:59:32 GMT">
					<outline text="ctSecsBetweenSwitches: 5," created="Sun, 12 Nov 2023 18:59:47 GMT"/>
					<outline text="fadeRate: &quot;slow&quot;" created="Sun, 12 Nov 2023 19:25:02 GMT"/>
					<outline text="}" created="Sun, 12 Nov 2023 18:59:40 GMT"/>
					</outline>
				<outline text="const urlRiver = &quot;https://feedland.com/getriverfromreadinglist?url=https://lists.feedcorps.org/artshow.opml&quot;;" isComment="true" created="Sun, 12 Nov 2023 16:13:37 GMT"/>
				<outline text="" created="Sun, 12 Nov 2023 18:49:59 GMT"/>
				<outline text="var globals = {" created="Sun, 12 Nov 2023 18:53:05 GMT">
					<outline text="artLibrary: new Array ()," created="Sun, 12 Nov 2023 18:53:11 GMT"/>
					<outline text="flPaused: false," created="Sun, 12 Nov 2023 18:58:04 GMT"/>
					<outline text="whenLastSwitch: new Date (0)," created="Sun, 12 Nov 2023 18:58:15 GMT"/>
					<outline text="ixlastart: 0," created="Sun, 12 Nov 2023 19:00:52 GMT"/>
					<outline text="flImageShowing: false" created="Sun, 12 Nov 2023 19:29:32 GMT"/>
					<outline text="}" created="Sun, 12 Nov 2023 18:53:19 GMT"/>
					</outline>
				<outline text="var feedCache = new Object ();" created="Tue, 14 Nov 2023 19:39:15 GMT"/>
				<outline text="var appPrefs = { //outline routines need this" created="Wed, 15 Nov 2023 16:31:07 GMT">
					<outline text="outlineFont: &quot;Ubuntu&quot;," created="Wed, 15 Nov 2023 16:35:14 GMT"/>
					<outline text="outlineFontSize: 14," created="Wed, 15 Nov 2023 16:35:32 GMT"/>
					<outline text="outlineLineHeight: 24" created="Wed, 15 Nov 2023 16:35:47 GMT"/>
					<outline text="};" created="Wed, 15 Nov 2023 16:31:12 GMT"/>
					</outline>
				<outline text="" created="Sun, 12 Nov 2023 16:13:38 GMT"/>
				<outline text="function htmlLink (url, text) {" created="Tue, 14 Nov 2023 20:17:17 GMT">
					<outline text="return (&quot;&lt;a href=\&quot;&quot; + url + &quot;\&quot; target=\&quot;_blank\&quot;&gt;&quot; + text + &quot;&lt;/a&gt;&quot;);" created="Tue, 14 Nov 2023 20:17:34 GMT"/>
					<outline text="}" created="Tue, 14 Nov 2023 20:17:33 GMT"/>
					</outline>
				<outline text="function httpRequest (url, timeout, headers, callback) { ">
					<outline text="Changes" isComment="true">
						<outline text="7/22/22; 12:30:36 PM by DW" created="Fri, 22 Jul 2022 16:30:36 GMT">
							<outline text="If there's no message, say there was a communication error. We have to say something. ;-)" created="Fri, 22 Jul 2022 16:30:37 GMT"/>
							</outline>
						<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
							<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
							</outline>
						<outline text="7/20/20; 5:36:14 PM by DW">
							<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
								<outline text="function (err, data)"/>
								</outline>
							<outline text="No, I don't want to use promises."/>
							<outline text="for info about timeous see this page." isComment="true">
								<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
								</outline>
							</outline>
						</outline>
					<outline text="timeout = (timeout === undefined) ? 30000 : timeout;"/>
					<outline text="var jxhr = $.ajax ({ ">
						<outline text="url: url,"/>
						<outline text="dataType: &quot;text&quot;, "/>
						<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
						<outline text="timeout"/>
						<outline text="}) "/>
						</outline>
					<outline text=".success (function (data, status) { ">
						<outline text="callback (undefined, data);"/>
						<outline text="}) "/>
						</outline>
					<outline text=".error (function (status) { ">
						<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
						<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
							<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
							<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
							</outline>
						<outline text="if ((message === undefined) || (message.length == 0)) { //7/22/22 by DW &amp; 8/31/22 by DW" created="Fri, 22 Jul 2022 16:29:46 GMT">
							<outline text="message = &quot;There was an error communicating with the server.&quot;;" created="Fri, 22 Jul 2022 16:30:07 GMT"/>
							<outline text="}" created="Fri, 22 Jul 2022 16:29:57 GMT"/>
							</outline>
						<outline text="var err = {">
							<outline text="code: status.status,"/>
							<outline text="message"/>
							<outline text="};"/>
							</outline>
						<outline text="callback (err);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getRiver (readinglistUrl, callback) {" created="Sun, 12 Nov 2023 16:15:50 GMT">
					<outline text="const url = appConsts.serverUrl + &quot;getriverfromreadinglist?url=&quot; + encodeURIComponent (readinglistUrl);" created="Tue, 14 Nov 2023 19:29:49 GMT"/>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Sun, 12 Nov 2023 16:16:04 GMT"/>
					</outline>
				<outline text="" created="Tue, 14 Nov 2023 19:37:18 GMT"/>
				<outline text="function getFeed (feedUrl, callback) {" created="Tue, 14 Nov 2023 19:37:19 GMT">
					<outline text="function getActualFeed (feedUrl, callback) {" created="Tue, 14 Nov 2023 19:29:31 GMT">
						<outline text="const url = appConsts.serverUrl + &quot;getfeed?url=&quot; + encodeURIComponent (feedUrl);" created="Tue, 14 Nov 2023 19:29:49 GMT"/>
						<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {">
							<outline text="if (err) {">
								<outline text="callback (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="callback (undefined, JSON.parse (jsontext));"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Tue, 14 Nov 2023 19:29:42 GMT"/>
						</outline>
					<outline text="if (feedCache [feedUrl] === undefined) {" created="Tue, 14 Nov 2023 19:37:37 GMT">
						<outline text="getActualFeed (feedUrl, function (err, theFeed) {" created="Tue, 14 Nov 2023 19:40:22 GMT">
							<outline text="if (err) {" created="Tue, 14 Nov 2023 19:40:39 GMT">
								<outline text="callback (err);" created="Tue, 14 Nov 2023 19:40:50 GMT"/>
								<outline text="}" created="Tue, 14 Nov 2023 19:40:43 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 14 Nov 2023 19:40:43 GMT">
								<outline text="feedCache [feedUrl] = {" created="Tue, 14 Nov 2023 19:41:32 GMT">
									<outline text="when: new Date ()," created="Tue, 14 Nov 2023 19:41:59 GMT"/>
									<outline text="theFeed" created="Tue, 14 Nov 2023 19:42:12 GMT"/>
									<outline text="};" created="Tue, 14 Nov 2023 19:41:47 GMT"/>
									</outline>
								<outline text="callback (undefined, theFeed);" created="Tue, 14 Nov 2023 19:40:56 GMT"/>
								<outline text="}" created="Tue, 14 Nov 2023 19:40:45 GMT"/>
								</outline>
							<outline text="});" created="Tue, 14 Nov 2023 19:40:37 GMT"/>
							</outline>
						<outline text="}" created="Tue, 14 Nov 2023 19:39:52 GMT"/>
						</outline>
					<outline text="else {" created="Tue, 14 Nov 2023 19:39:54 GMT">
						<outline text="callback (undefined, feedCache [feedUrl].theFeed);" created="Tue, 14 Nov 2023 19:40:10 GMT"/>
						<outline text="}" created="Tue, 14 Nov 2023 19:39:56 GMT"/>
						</outline>
					<outline text="}" created="Tue, 14 Nov 2023 19:37:33 GMT"/>
					</outline>
				<outline text="" created="Sun, 12 Nov 2023 18:48:57 GMT"/>
				<outline text="function viewPaused () {">
					<outline text="var s = &quot;&quot;;"/>
					<outline text="if (globals.flPaused) {">
						<outline text="s = &quot;PAUSED&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="$(&quot;.divPausedMessage&quot;).html (s);"/>
					<outline text="}"/>
					</outline>
				<outline text="function viewInfoAboutTheArt (item) {" created="Mon, 13 Nov 2023 21:07:49 GMT">
					<outline text="moveOutlineCursorToFeed (item.feedUrl);"/>
					<outline text="return;" created="Wed, 15 Nov 2023 15:54:19 GMT"/>
					<outline text="" created="Wed, 15 Nov 2023 15:54:19 GMT"/>
					<outline text="" created="Wed, 15 Nov 2023 15:54:19 GMT"/>
					<outline text="console.log (&quot;viewInfoAboutTheArt: item == &quot; + jsonStringify (item));" created="Mon, 13 Nov 2023 21:08:26 GMT"/>
					<outline text="getFeed (item.feedUrl, function (err, theFeed) {" created="Tue, 14 Nov 2023 20:00:03 GMT">
						<outline text="" created="Tue, 14 Nov 2023 20:54:18 GMT"/>
						<outline text="" created="Tue, 14 Nov 2023 20:58:12 GMT"/>
						<outline text="$(&quot;.divFeedTitle&quot;).html (htmlLink (item.link, theFeed.title));" created="Tue, 14 Nov 2023 20:58:13 GMT"/>
						<outline text="return;" created="Tue, 14 Nov 2023 20:55:35 GMT"/>
						<outline text="" created="Tue, 14 Nov 2023 20:54:18 GMT"/>
						<outline text="" created="Tue, 14 Nov 2023 20:54:19 GMT"/>
						<outline text="const theTable = $(&quot;&lt;table class=\&quot;table tableForFeedPage\&quot;&gt;&lt;/table&gt;&quot;);" created="Sat, 27 Aug 2022 14:24:55 GMT"/>
						<outline text="function getRow (name, val, tipText) {" created="Sat, 27 Aug 2022 14:31:08 GMT">
							<outline text="var theRow = $(&quot;&lt;tr&gt;&lt;/tr&gt;&quot;);" created="Sat, 27 Aug 2022 14:31:30 GMT"/>
							<outline text="" created="Mon, 17 Oct 2022 14:00:14 GMT"/>
							<outline text="var nameObject = $(&quot;&lt;span&gt;&quot; + name + &quot;:&lt;/span&gt;&quot;);" created="Mon, 17 Oct 2022 14:00:14 GMT"/>
							<outline text="if (tipText !== undefined) {" created="Mon, 17 Oct 2022 14:03:31 GMT">
								<outline text="addToolTip (nameObject, tipText);" created="Sun, 28 Aug 2022 15:53:17 GMT"/>
								<outline text="}" created="Mon, 17 Oct 2022 14:03:40 GMT"/>
								</outline>
							<outline text="var tdName = $(&quot;&lt;td class=\&quot;tdLabel\&quot;&gt;&lt;/td&gt;&quot;);" created="Mon, 17 Oct 2022 14:01:49 GMT"/>
							<outline text="tdName.append (nameObject);" created="Mon, 17 Oct 2022 14:02:18 GMT"/>
							<outline text="theRow.append (tdName);" created="Sat, 27 Aug 2022 14:32:54 GMT"/>
							<outline text="" created="Mon, 17 Oct 2022 14:00:15 GMT"/>
							<outline text="var tdForVal = $(&quot;&lt;td&gt;&lt;/td&gt;&quot;);" created="Sat, 27 Aug 2022 14:33:42 GMT"/>
							<outline text="tdForVal.append (val);" created="Sat, 27 Aug 2022 14:34:05 GMT"/>
							<outline text="theRow.append (tdForVal)" created="Sat, 27 Aug 2022 14:33:42 GMT"/>
							<outline text="" created="Sat, 27 Aug 2022 14:33:43 GMT"/>
							<outline text="return (theRow);" created="Sat, 27 Aug 2022 14:31:42 GMT"/>
							<outline text="}" created="Sat, 27 Aug 2022 14:31:27 GMT"/>
							</outline>
						<outline text="" created="Tue, 14 Nov 2023 20:02:08 GMT"/>
						<outline text="function getFeedDescription () {" created="Tue, 14 Nov 2023 20:02:09 GMT">
							<outline text="const theDescription = $(&quot;&lt;span&gt;&quot; + theFeed.description + &quot;&lt;/span&gt;&quot;);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="return (theDescription);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="}" created="Tue, 14 Nov 2023 20:02:16 GMT"/>
							</outline>
						<outline text="" created="Tue, 14 Nov 2023 20:02:09 GMT"/>
						<outline text="function getFeedTitle () {" created="Tue, 14 Nov 2023 20:02:09 GMT">
							<outline text="const theTitle = $(&quot;&lt;span class=\&quot;spFeedTitle\&quot;&gt;&quot; + htmlLink (item.link, theFeed.title) + &quot;&lt;/span&gt;&quot;);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="return (theTitle);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="}" created="Tue, 14 Nov 2023 20:02:16 GMT"/>
							</outline>
						<outline text="function getLink () {" created="Sat, 27 Aug 2022 16:39:34 GMT">
							<outline text="const theLink = $(&quot;&lt;span&gt;&quot; + htmlLink (item.link, &quot;&lt;div class=\&quot;divXmlIcon\&quot;&gt;XML&lt;/div&gt;&quot;) + &quot;&lt;/span&gt;&quot;);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="return (theLink);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="}" created="Sat, 27 Aug 2022 16:39:37 GMT"/>
							</outline>
						<outline text="function getHtmltext () {" created="Sat, 27 Aug 2022 16:39:34 GMT">
							<outline text="const theHtmltext = $(&quot;&lt;span&gt;&quot; + item.description + &quot;&lt;/span&gt;&quot;);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="return (theHtmltext);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="}" created="Sat, 27 Aug 2022 16:39:37 GMT"/>
							</outline>
						<outline text="function getMarkdowntext () {" created="Sat, 27 Aug 2022 16:39:34 GMT">
							<outline text="const theMarkdowntext = $(&quot;&lt;span&gt;&quot; + item.markdowntext + &quot;&lt;/span&gt;&quot;);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="return (theMarkdowntext);" created="Fri, 10 Nov 2023 17:21:25 GMT"/>
							<outline text="}" created="Sat, 27 Aug 2022 16:39:37 GMT"/>
							</outline>
						<outline text="theTable.append (getRow (&quot;Feed&quot;, getFeedTitle ()))" created="Sat, 27 Aug 2022 14:29:31 GMT"/>
						<outline text="theTable.append (getRow (&quot;Description&quot;, getFeedDescription ()))" isComment="true" created="Sat, 27 Aug 2022 14:29:31 GMT"/>
						<outline text="theTable.append (getRow (&quot;Link&quot;, getLink ()))" created="Sat, 27 Aug 2022 14:29:31 GMT"/>
						<outline text="theTable.append (getRow (&quot;Text&quot;, getHtmltext ()))" created="Sat, 27 Aug 2022 14:29:31 GMT"/>
						<outline text="theTable.append (getRow (&quot;Text&quot;, getMarkdowntext ()))" isComment="true" created="Sat, 27 Aug 2022 14:29:31 GMT"/>
						<outline text="whereToAppend.empty ();" created="Mon, 13 Nov 2023 21:16:29 GMT"/>
						<outline text="whereToAppend.append (theTable);"/>
						<outline text="});" created="Tue, 14 Nov 2023 20:00:19 GMT"/>
						</outline>
					<outline text="}" created="Mon, 13 Nov 2023 21:08:07 GMT"/>
					</outline>
				<outline text="function viewArt (ixArray, theContainer) {">
					<outline text="Changes" isComment="true">
						<outline text="6/30/18; 9:10:39 AM by DW">
							<outline text="The on load handler is unreliable according to jQuery docs, so we have a backup plan to show the stats after 3/10ths of a sec."/>
							</outline>
						</outline>
					<outline text="const item = globals.artLibrary [ixArray];" created="Sun, 12 Nov 2023 19:01:47 GMT"/>
					<outline text="console.log (&quot;viewArt: ixArray == &quot; + ixArray);" isComment="true" created="Sun, 12 Nov 2023 19:01:47 GMT"/>
					<outline text="const theImage = $(&quot;.imgArtImage&quot;);" created="Sun, 12 Nov 2023 19:07:36 GMT"/>
					<outline text="function fadeout (callback) {" created="Sun, 12 Nov 2023 19:28:50 GMT">
						<outline text="if (globals.flImageShowing) {" created="Sun, 12 Nov 2023 19:29:47 GMT">
							<outline text="theImage.fadeOut (config.fadeRate, function () {" created="Sun, 12 Nov 2023 19:30:09 GMT">
								<outline text="theImage.attr (&quot;src&quot;, &quot;&quot;);" created="Sun, 12 Nov 2023 19:07:54 GMT"/>
								<outline text="theImage.css (&quot;display&quot;, &quot;block&quot;);" created="Sun, 12 Nov 2023 19:07:54 GMT"/>
								<outline text="callback ();" created="Sun, 12 Nov 2023 19:30:15 GMT"/>
								<outline text="});" created="Sun, 12 Nov 2023 19:30:10 GMT"/>
								</outline>
							<outline text="}" created="Sun, 12 Nov 2023 19:29:54 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 12 Nov 2023 19:29:55 GMT">
							<outline text="callback ();" created="Sun, 12 Nov 2023 19:29:57 GMT"/>
							<outline text="}" created="Sun, 12 Nov 2023 19:29:56 GMT"/>
							</outline>
						<outline text="}" created="Sun, 12 Nov 2023 19:29:01 GMT"/>
						</outline>
					<outline text="fadeout (function () {">
						<outline text="viewInfoAboutTheArt (item);" created="Mon, 13 Nov 2023 21:07:35 GMT"/>
						<outline text="theImage.css (&quot;display&quot;, &quot;none&quot;);" isComment="true" created="Sun, 12 Nov 2023 19:07:54 GMT"/>
						<outline text="theImage.attr (&quot;src&quot;, item.enclosure.url);" created="Sun, 12 Nov 2023 19:07:54 GMT"/>
						<outline text="theImage.on (&quot;load&quot;, function () {">
							<outline text="globals.flImageShowing = true;" created="Sun, 12 Nov 2023 19:29:18 GMT"/>
							<outline text="" created="Sun, 12 Nov 2023 22:18:22 GMT"/>
							<outline text="const ratio = theContainer.width () / theImage.width ();" created="Sun, 12 Nov 2023 22:18:22 GMT"/>
							<outline text="const width = theContainer.width ();" created="Sun, 12 Nov 2023 22:23:26 GMT"/>
							<outline text="const height = theImage.height () * ratio;" created="Sun, 12 Nov 2023 22:23:59 GMT"/>
							<outline text="console.log (&quot;viewArt: ratio = &quot; + ratio + &quot;, width = &quot; + width + &quot;, height == &quot; + height);" isComment="true" created="Sun, 12 Nov 2023 22:18:22 GMT"/>
							<outline text="" created="Sun, 12 Nov 2023 22:26:04 GMT"/>
							<outline text="theImage.attr (&quot;height&quot;, height);" created="Sun, 12 Nov 2023 19:07:54 GMT"/>
							<outline text="theImage.attr (&quot;width&quot;, width);" created="Sun, 12 Nov 2023 19:07:54 GMT"/>
							<outline text="" created="Sun, 12 Nov 2023 22:18:23 GMT"/>
							<outline text="theImage.fadeIn (config.fadeRate, function () {">
								<outline text="});"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function viewRandomArt () {">
					<outline text="console.log (&quot;viewRandomArt: secondsSince (whenLastSwitch) == &quot; + secondsSince (whenLastSwitch));" isComment="true"/>
					<outline text="while (true) { //never repeat the same work of art">
						<outline text="var ix = random (0, globals.artLibrary.length - 1);"/>
						<outline text="if (ix !== globals.ixlastart) {">
							<outline text="viewArt (ix, $(&quot;.divPageBody&quot;));"/>
							<outline text="globals.ixlastart = ix;"/>
							<outline text="break;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function switchArtIfReady () {">
					<outline text="if (!globals.flPaused) {">
						<outline text="if (secondsSince (globals.whenLastSwitch) &gt;= config.ctSecsBetweenSwitches) {">
							<outline text="globals.whenLastSwitch = new Date ();"/>
							<outline text="viewRandomArt ();"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Wed, 15 Nov 2023 16:25:41 GMT"/>
				<outline text="function loadReadingListAsOutline (callback) { //11/15/23 by DW" created="Wed, 15 Nov 2023 16:25:41 GMT">
					<outline text="const url = appConsts.readinglistUrl;" created="Wed, 15 Nov 2023 16:27:25 GMT"/>
					<outline text="httpRequest (url, undefined, undefined, function (err, opmltext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;loadReadingListAsOutline: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="alertDialog (err.message);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="opInitOutliner (opmltext, true, true);"/>
							<outline text="}"/>
							</outline>
						<outline text="callback ();" created="Wed, 15 Nov 2023 16:29:47 GMT"/>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Wed, 15 Nov 2023 16:25:50 GMT"/>
					</outline>
				<outline text="function moveOutlineCursorToFeed (feedUrl) { //11/15/23 by DW" created="Wed, 15 Nov 2023 16:40:13 GMT">
					<outline text="opFirstSummit ();" created="Wed, 15 Nov 2023 16:40:39 GMT"/>
					<outline text="while (true) {" created="Wed, 15 Nov 2023 16:40:43 GMT">
						<outline text="if (opGetOneAtt (&quot;xmlUrl&quot;) == feedUrl) {" created="Wed, 15 Nov 2023 16:42:34 GMT">
							<outline text="break;" created="Wed, 15 Nov 2023 16:42:39 GMT"/>
							<outline text="}" created="Wed, 15 Nov 2023 16:42:38 GMT"/>
							</outline>
						<outline text="if (!opGo (down, 1)) {" created="Wed, 15 Nov 2023 16:41:40 GMT">
							<outline text="opFirstSummit ();" created="Wed, 15 Nov 2023 16:40:39 GMT"/>
							<outline text="break;" created="Wed, 15 Nov 2023 16:41:50 GMT"/>
							<outline text="}" created="Wed, 15 Nov 2023 16:41:52 GMT"/>
							</outline>
						<outline text="}" created="Wed, 15 Nov 2023 16:41:35 GMT"/>
						</outline>
					<outline text="}" created="Wed, 15 Nov 2023 16:40:26 GMT"/>
					</outline>
				<outline text="" created="Tue, 14 Nov 2023 16:50:04 GMT"/>
				<outline text="function loadArtLibrary (callback) {" created="Sun, 12 Nov 2023 18:48:58 GMT">
					<outline text="var library = new Array ();" created="Sun, 12 Nov 2023 18:50:45 GMT"/>
					<outline text="getRiver (appConsts.readinglistUrl, function (err, river) {" created="Sun, 12 Nov 2023 16:16:43 GMT">
						<outline text="if (err) {" created="Sun, 12 Nov 2023 16:17:01 GMT">
							<outline text="callback (err);" created="Sun, 12 Nov 2023 16:17:03 GMT"/>
							<outline text="}" created="Sun, 12 Nov 2023 16:17:12 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 12 Nov 2023 16:17:12 GMT">
							<outline text="river.feeds.forEach (function (feed) {" created="Sun, 12 Nov 2023 16:17:59 GMT">
								<outline text="feed.items.forEach (function (item) {" created="Sun, 12 Nov 2023 16:19:12 GMT">
									<outline text="if (item.enclosure !== undefined) {" created="Sun, 12 Nov 2023 16:19:49 GMT">
										<outline text="if (item.enclosure.type !== undefined) {" created="Sun, 12 Nov 2023 16:20:27 GMT">
											<outline text="if (beginsWith (item.enclosure.type, &quot;image/&quot;)) {" created="Sun, 12 Nov 2023 16:20:50 GMT">
												<outline text="library.push (item);" created="Sun, 12 Nov 2023 18:50:34 GMT"/>
												<outline text="console.log (padWithZeros (++ct, 3) + &quot;: &quot; + item.enclosure.url);" isComment="true" created="Sun, 12 Nov 2023 16:21:22 GMT"/>
												<outline text="}" created="Sun, 12 Nov 2023 16:21:18 GMT"/>
												</outline>
											<outline text="}" created="Sun, 12 Nov 2023 16:20:49 GMT"/>
											</outline>
										<outline text="}" created="Sun, 12 Nov 2023 16:20:17 GMT"/>
										</outline>
									<outline text="});" created="Sun, 12 Nov 2023 16:19:36 GMT"/>
									</outline>
								<outline text="});" created="Sun, 12 Nov 2023 16:18:29 GMT"/>
								</outline>
							<outline text="callback (undefined, library);" created="Sun, 12 Nov 2023 18:52:54 GMT"/>
							<outline text="}" created="Sun, 12 Nov 2023 16:17:14 GMT"/>
							</outline>
						<outline text="});" created="Sun, 12 Nov 2023 16:16:56 GMT"/>
						</outline>
					<outline text="}" created="Sun, 12 Nov 2023 18:49:13 GMT"/>
					</outline>
				<outline text="" created="Sun, 12 Nov 2023 18:48:58 GMT"/>
				<outline text="function everyMinute () {">
					<outline text="var now = new Date ();"/>
					<outline text="if (now.getMinutes () == 0) {" created="Sun, 12 Nov 2023 22:13:11 GMT">
						<outline text="console.log (&quot;\neveryMinute: &quot; + now.toLocaleTimeString () + &quot;, v&quot; + myVersion);"/>
						<outline text="}" created="Sun, 12 Nov 2023 22:13:18 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {">
					<outline text="switchArtIfReady ();"/>
					<outline text="}"/>
					</outline>
				<outline text="function handleClick () {" created="Mon, 13 Nov 2023 03:04:10 GMT">
					<outline text="console.log (&quot;handleClick&quot;);"/>
					<outline text="globals.flPaused = !globals.flPaused;"/>
					<outline text="viewPaused ();"/>
					<outline text="if (!globals.flPaused) { //cause an immediate switch">
						<outline text="viewRandomArt ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}" created="Mon, 13 Nov 2023 03:04:15 GMT"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup&quot;);" created="Fri, 17 Feb 2023 15:43:38 GMT"/>
					<outline text="loadReadingListAsOutline (function () {">
						<outline text="loadArtLibrary (function (err, theLibrary) {" created="Sun, 12 Nov 2023 18:49:32 GMT">
							<outline text="if (err) {" created="Sun, 12 Nov 2023 18:53:35 GMT">
								<outline text="alertDialog (err.message);" created="Sun, 12 Nov 2023 18:53:38 GMT"/>
								<outline text="}" created="Sun, 12 Nov 2023 18:53:44 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 12 Nov 2023 18:53:45 GMT">
								<outline text="globals.artLibrary = theLibrary;" created="Sun, 12 Nov 2023 18:53:47 GMT"/>
								<outline text="console.log (jsonStringify (globals.artLibrary));" isComment="true" created="Sun, 12 Nov 2023 18:54:02 GMT"/>
								<outline text="$(&quot;.imgArtImage&quot;).on (&quot;click&quot;, handleClick);"/>
								<outline text="self.setInterval (everySecond, 1000); "/>
								<outline text="runEveryMinute (everyMinute);" created="Wed, 05 May 2021 02:42:28 GMT"/>
								<outline text="}" created="Sun, 12 Nov 2023 18:53:57 GMT"/>
								</outline>
							<outline text="hitCounter ();" created="Fri, 21 Apr 2023 14:15:08 GMT"/>
							<outline text="});" created="Sun, 12 Nov 2023 18:49:43 GMT"/>
							</outline>
						<outline text="});" created="Wed, 15 Nov 2023 16:29:28 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="index.html" created="Thu, 07 Apr 2022 16:25:39 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;ArtShow2&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="" created="Sat, 22 Apr 2023 17:21:30 GMT"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;%basicoutliner%&gt;" created="Wed, 30 Aug 2023 16:34:27 GMT"/>
						<outline text="" created="Sat, 22 Apr 2023 16:48:58 GMT"/>
						<outline text="&lt;script src=&quot;viewart.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;/&gt;"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div style=&quot;margin-left: 100px; margin-top: 100px; width: 500px;&quot;&gt;" isComment="true" created="Fri, 05 May 2023 18:45:28 GMT">
							<outline text="&lt;div class=&quot;divCurvedLine&quot;&gt;" created="Fri, 05 May 2023 18:44:23 GMT">
								<outline text="&lt;/div&gt;" created="Fri, 05 May 2023 18:45:23 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Fri, 05 May 2023 18:45:53 GMT"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;div class=&quot;divPausedMessage&quot;&gt;" created="Mon, 13 Nov 2023 03:05:59 GMT">
								<outline text="&lt;/div&gt;" created="Mon, 13 Nov 2023 03:06:09 GMT"/>
								</outline>
							<outline text="&lt;div class=&quot;divColumnWrapper&quot;&gt;" created="Fri, 01 Sep 2023 19:06:09 GMT">
								<outline text="&lt;div class=&quot;divOutlineColumn&quot;&gt;">
									<outline text="&lt;div class=&quot;divOutliner&quot; id=&quot;outliner&quot;&gt;">
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divImageColumn&quot;&gt;">
									<outline text="&lt;div class=&quot;divFeedTitle&quot;&gt;" created="Tue, 14 Nov 2023 20:57:07 GMT">
										<outline text="&lt;/div&gt;" created="Tue, 14 Nov 2023 20:57:16 GMT"/>
										</outline>
									<outline text="&lt;img class=&quot;imgArtImage&quot;&gt;" created="Tue, 14 Nov 2023 21:00:26 GMT">
										<outline text="&lt;/img&gt;" created="Tue, 14 Nov 2023 21:00:31 GMT"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Fri, 01 Sep 2023 19:06:21 GMT"/>
								</outline>
							<outline text="&lt;div class=&quot;divInfoAboutTheArt&quot;&gt;" isComment="true" created="Mon, 13 Nov 2023 21:10:15 GMT">
								<outline text="&lt;/div&gt;" created="Mon, 13 Nov 2023 21:10:20 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Thu, 16 Nov 2023 14:25:21 GMT">
				<outline text="# artshow2">
					<outline text="A &lt;a href=&quot;https://artshow2.scripting.com/&quot;&gt;new version&lt;/a&gt; of the Artshow app that builds on Bluesky RSS 2.0 feeds. "/>
					</outline>
				<outline text="### More info" created="Thu, 16 Nov 2023 14:26:38 GMT">
					<outline text="The original Twitter-based Artshow site is &lt;a href=&quot;http://artshow.scripting.com/&quot;&gt;here&lt;/a&gt;. " created="Thu, 16 Nov 2023 14:26:43 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="/scripting.com/misc/artshow/" isComment="true">
			<outline text="viewart.js">
				<outline text="var artLibrary = {">
					<outline text="theArt: new Array ()"/>
					<outline text="};"/>
					</outline>
				<outline text=""/>
				<outline text="var imageSerialNum = 0;"/>
				<outline text="var imgDisplayWidth; //set to the width of #idPageBody" isComment="true"/>
				<outline text="var flPaused = false;"/>
				<outline text="var ctSecsBetweenSwitches = 3, whenLastSwitch = new Date ();"/>
				<outline text="var ixlastart = -1;"/>
				<outline text="var idLastImg = undefined;"/>
				<outline text=""/>
				<outline text="function removeDescriptionCrap (description) {">
					<outline text="Pierre-Antoine Baudouin (1723-1769) The Honest Model https://t.co/YNtOsQgNWa" isComment="true"/>
					<outline text="var ix = description.indexOf (&quot;https://&quot;);"/>
					<outline text="if (ix &gt; 0) {">
						<outline text="description = stringMid (description, 1, ix);"/>
						<outline text="}"/>
						</outline>
					<outline text="description = trimWhitespace (description);"/>
					<outline text="return (description);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getUrlTweet (item) {">
					<outline text="var name = item.name;"/>
					<outline text="if (name === undefined) {">
						<outline text="name = &quot;ArtPicsChannel&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="return (&quot;https://twitter.com/&quot; + name + &quot;/status/&quot; + item.id);"/>
					<outline text="}"/>
					</outline>
				<outline text="function viewPaused () {">
					<outline text="var s = &quot;&quot;;"/>
					<outline text="if (flPaused) {">
						<outline text="s = &quot;PAUSED&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="$(&quot;#idPausedMessage&quot;).html (s);"/>
					<outline text="}"/>
					</outline>
				<outline text="function viewArt (ixArray) {">
					<outline text="Changes" isComment="true">
						<outline text="6/30/18; 9:10:39 AM by DW">
							<outline text="The on load handler is unreliable according to jQuery docs, so we have a backup plan to show the stats after 3/10ths of a sec."/>
							</outline>
						</outline>
					<outline text="function showStats () {">
						<outline text="if (!flStatsShown) {">
							<outline text="var htmltext = &quot;&quot;;"/>
							<outline text="function add (s) {">
								<outline text="htmltext += s;"/>
								<outline text="}"/>
								</outline>
							<outline text="add (&quot;&lt;div id=\&quot;idStatsDiv\&quot; style=\&quot;display: none\&quot;&gt;&quot;);"/>
							<outline text="add (&quot;&lt;span class=\&quot;spTweetIcon\&quot;&gt;&lt;a href=\&quot;&quot; + getUrlTweet (item) + &quot;\&quot; target=\&quot;_blank\&quot; title=\&quot;Click here for the tweet.\&quot;&gt;&quot; + twStorageConsts.fontAwesomeIcon + &quot;&lt;/a&gt;&lt;/span&gt;&quot;);"/>
							<outline text="add (description + &quot;.&quot;);"/>
							<outline text="add (&quot;#&quot; + (ixArray + 1) + &quot; of &quot; + artLibrary.theArt.length + &quot;: &quot; + description + &quot;.&quot;);" isComment="true"/>
							<outline text="add (&quot;&lt;/div&gt;&quot;);"/>
							<outline text="$(&quot;#idStats&quot;).html (htmltext);"/>
							<outline text=""/>
							<outline text="$(&quot;#idStatsDiv&quot;).fadeIn (faderate);"/>
							<outline text=""/>
							<outline text="$(&quot;#idTweetIcon&quot;).html ();" isComment="true"/>
							<outline text="flStatsShown = true;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="var item = artLibrary.theArt [ixArray];"/>
					<outline text="var description = removeDescriptionCrap (item.text);"/>
					<outline text="var faderate = &quot;slow&quot;;"/>
					<outline text="var flStatsShown = false;"/>
					<outline text=""/>
					<outline text="function viewNewImage () {">
						<outline text="console.log (&quot;viewNewImage&quot;); //10/15/23 by DW" created="Sun, 15 Oct 2023 16:00:50 GMT"/>
						<outline text="var imgDisplayWidth = $(&quot;#idPageBody&quot;).width ();"/>
						<outline text="var ratio = imgDisplayWidth / item.w;"/>
						<outline text="var width = imgDisplayWidth;"/>
						<outline text="var height = item.h * ratio;"/>
						<outline text="var idImg = &quot;idImg&quot; + imageSerialNum++, whenstartload = new Date ();"/>
						<outline text="var style = &quot;style='display: none;'&quot;;"/>
						<outline text="$(&quot;#idArtDisplay&quot;).html (&quot;&lt;img id=\&quot;&quot; + idImg + &quot;\&quot; src=\&quot;&quot; + item.url + &quot;\&quot; width=\&quot;&quot; + width + &quot;\&quot; height=\&quot;&quot; + height + &quot;\&quot; alt=\&quot;&quot; + item.text + &quot;\&quot;&quot; + style + &quot;&gt;&quot;);"/>
						<outline text="$(&quot;#idTweetIcon&quot;).html (&quot;&quot;);"/>
						<outline text="$(&quot;#&quot; + idImg).on (&quot;load&quot;, function () {">
							<outline text="$(&quot;#&quot; + idImg).fadeIn (faderate, function () {">
								<outline text="$(&quot;#idHowToLink&quot;).css (&quot;visibility&quot;, &quot;visible&quot;);" isComment="true"/>
								<outline text="showStats ();"/>
								<outline text="});"/>
								</outline>
							<outline text="idLastImg = idImg;"/>
							<outline text="console.log (secondsSince (whenstartload) + &quot; secs.&quot;);" isComment="true"/>
							<outline text="});"/>
							</outline>
						<outline text="$(&quot;#&quot; + idImg).on (&quot;click&quot;, function () {">
							<outline text="console.log (&quot;click&quot;);"/>
							<outline text="flPaused = !flPaused;"/>
							<outline text="viewPaused ();"/>
							<outline text="if (!flPaused) { //cause an immediate switch">
								<outline text="viewRandomArt ();"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="setTimeout (function () {">
							<outline text="showStats ()"/>
							<outline text="}, 300);"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="$(&quot;#idStats&quot;).text (&quot;&quot;);"/>
					<outline text="if (idLastImg === undefined) {">
						<outline text="viewNewImage ();"/>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="$(&quot;#&quot; + idLastImg).fadeOut (faderate, function () {">
							<outline text="viewNewImage ();"/>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function viewRandomArt () {">
					<outline text="console.log (&quot;viewRandomArt: secondsSince (whenLastSwitch) == &quot; + secondsSince (whenLastSwitch));" isComment="true"/>
					<outline text="while (true) { //never repeat the same work of art">
						<outline text="var ix = random (0, artLibrary.theArt.length - 1);"/>
						<outline text="if (ix !== ixlastart) {">
							<outline text="viewArt (ix);"/>
							<outline text="ixlastart = ix;"/>
							<outline text="whenLastSwitch = new Date ();"/>
							<outline text="break;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function switchArtIfReady () {">
					<outline text="if (!flPaused) {">
						<outline text="if (secondsSince (whenLastSwitch) &gt;= ctSecsBetweenSwitches) {">
							<outline text="viewRandomArt ();"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="styles.css">
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 18px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 600px;"/>
					<outline text="margin-top: 35px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-bottom: 400px;"/>
					<outline text="min-height: 1400px;" created="Tue, 04 May 2021 19:47:51 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divArtDisplay {">
					<outline text="border: 1px solid silver;" isComment="true"/>
					<outline text="min-width: 800;" isComment="true"/>
					<outline text="min-height: 600;" isComment="true"/>
					<outline text="background-color: white;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".divStats {">
					<outline text="font-size: 14px;"/>
					<outline text="padding-left: 10px;" isComment="true"/>
					<outline text="margin-top: 8px;"/>
					<outline text="color: gray;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divCheckbox {">
					<outline text="font-size: 15px;"/>
					<outline text="float: left;" isComment="true"/>
					<outline text="margin-bottom: 10px;"/>
					<outline text="display: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divTopStatusLine {">
					<outline text="height: 20px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPausedMessage {">
					<outline text="float: right;"/>
					<outline text="font-size: 12px;"/>
					<outline text="color: gray;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divHowToLink {">
					<outline text="float: left;"/>
					<outline text="font-size: 16px;"/>
					<outline text="font-size: 12px;" isComment="true"/>
					<outline text="margin-bottom: 2px;" created="Tue, 04 May 2021 19:49:43 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divHowToLink a {">
					<outline text="cursor: pointer;"/>
					<outline text="color: gray;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spTweetIcon {">
					<outline text="float: left;" isComment="true"/>
					<outline text="font-size: 14px;"/>
					<outline text="margin-top: 2px;"/>
					<outline text="margin-right: .4em;"/>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="/* styles for phone */" created="Sun, 09 Mar 2014 19:11:13 GMT" pgfnum="38719">
					<outline text="@media only screen "/>
					<outline text="and (min-device-width : 320px) "/>
					<outline text="and (max-device-width : 480px) {">
						<outline text=".divPageBody {">
							<outline text="width: 96%;"/>
							<outline text="margin-top: 5px;"/>
							<outline text="margin-left: auto;"/>
							<outline text="margin-right: auto;"/>
							<outline text="margin-bottom: 30px;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text="/* styles for tablet */">
					<outline text="@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {">
						<outline text=".divPageBody {" isComment="true">
							<outline text="width: 96%;"/>
							<outline text="margin-top: 5px;"/>
							<outline text="margin-left: auto;"/>
							<outline text="margin-right: auto;"/>
							<outline text="margin-bottom: 30px;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					</outline>
				<outline text=""/>
				</outline>
			<outline text="code.js">
				<outline text="var appConsts = {">
					<outline text="urlTwitterServer: &quot;http://twitter.happyfriends.camp/&quot;,"/>
					<outline text="version: &quot;0.4.5&quot;"/>
					<outline text="};"/>
					</outline>
				<outline text=""/>
				<outline text="const urlArtJson = &quot;https://raw.githubusercontent.com/scripting/artDownloader/main/data/art.json&quot;;"/>
				<outline text="const urlArtJson = &quot;http://scripting.com/misc/artshow/art.json&quot;;" isComment="true"/>
				<outline text=""/>
				<outline text="var whenLastUserAction = new Date ();"/>
				<outline text=""/>
				<outline text="function readArtJson (callback) {">
					<outline text="readHttpFileThruProxy (urlArtJson, undefined, function (jsontext) {">
						<outline text="if (jsontext !== undefined) {">
							<outline text="artLibrary = JSON.parse (jsontext);"/>
							<outline text="if (callback !== undefined) {">
								<outline text="callback ();"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everyFiveMinutes () {">
					<outline text="getArtTweets ();" isComment="true"/>
					<outline text="readArtJson ();"/>
					<outline text="}"/>
					</outline>
				<outline text="function everyMinute () {">
					<outline text="var now = new Date ();" isComment="true"/>
					<outline text="console.log (&quot;\neveryMinute: &quot; + now.toLocaleTimeString () + &quot;, v&quot; + appConsts.version);" isComment="true"/>
					<outline text="pingGoogleAnalytics ();" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text="function isCheckboxChecked () {" isComment="true">
					<outline text="return ($(&quot;#idRandomArtDisplay&quot;).prop (&quot;checked&quot;));"/>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {">
					<outline text="switchArtIfReady ();"/>
					<outline text="}"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup!&quot;);"/>
					<outline text="imgDisplayWidth = $(&quot;#idPageBody&quot;).width ();" isComment="true"/>
					<outline text="readArtJson (function () {">
						<outline text="viewRandomArt ();"/>
						<outline text="hitCounter ();"/>
						<outline text="console.log (&quot;There are &quot; + artLibrary.theArt.length + &quot; works of art in the library.&quot;);" created="Wed, 05 May 2021 02:38:36 GMT"/>
						<outline text="initGoogleAnalytics (); " isComment="true"/>
						<outline text="self.setInterval (everySecond, 1000); "/>
						<outline text="runEveryMinute (everyMinute);" created="Wed, 05 May 2021 02:42:28 GMT"/>
						<outline text="self.setInterval (everyFiveMinutes, 5 * 60000); "/>
						<outline text="$(&quot;#idRandomArtDisplay&quot;).click (function () {" isComment="true">
							<outline text="viewRandomArt ();"/>
							<outline text="});"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="index.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;Art Show&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;http://api.nodestorage.io/api.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;viewart.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;!-- Facebook metadata --&gt;">
							<outline text="&lt;meta property=&quot;og:url&quot; content=&quot;http://artshow.scripting.com/&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:type&quot; content=&quot;website&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:title&quot; content=&quot;Art Show&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:description&quot; content=&quot;The Art Show web app displays a great work of art every ten seconds. It's a new way of viewing art from the wonderful fan art feeds on Twitter.&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:image&quot; content=&quot;http://scripting.com/images/2018/07/01/vanGogh.png&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:site_name&quot; content=&quot;artshow.scripting.com&quot; /&gt;"/>
							</outline>
						<outline text="&lt;!-- Twitter metadata --&gt;">
							<outline text="&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:site&quot; content=&quot;@davewiner&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:title&quot; content=&quot;Art Show&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:description&quot; content=&quot;The Art Show web app displays a great work of art every ten seconds. It's a new way of viewing art from the wonderful fan art feeds on Twitter.&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:image:src&quot; content=&quot;http://scripting.com/images/2018/07/01/vanGogh.png&quot;&gt;"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;span class=&quot;spTweetIcon&quot; id=&quot;idTweetIcon&quot;&gt;" isComment="true">
							<outline text="&lt;/span&gt;"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot; id=&quot;idPageBody&quot;&gt;">
							<outline text="&lt;center&gt;">
								<outline text="&lt;div class=&quot;divTopStatusLine&quot;&gt;">
									<outline text="&lt;div class=&quot;divPausedMessage&quot; id=&quot;idPausedMessage&quot;&gt;">
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;div class=&quot;divHowToLink&quot; id=&quot;idHowToLink&quot;&gt;">
										<outline text="&lt;a href=&quot;http://this.how/artshow/&quot; target=&quot;_blank&quot; title=&quot;Click here to see the docs for this app.&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt;&lt;/a&gt;"/>
										<outline text="&lt;a href=&quot;http://this.how/artshow/&quot; target=&quot;_blank&quot; title=&quot;Click here to see the docs for this app.&quot;&gt;ABOUT&lt;/a&gt;" isComment="true"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divCheckbox&quot;&gt;">
									<outline text="&lt;input type=&quot;checkbox&quot; id=&quot;idRandomArtDisplay&quot; checked&gt; Update display"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divArtDisplay&quot; id=&quot;idArtDisplay&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divStats&quot; id=&quot;idStats&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/center&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="/scripting.com/misc/artshow/app/" isComment="true">
			<outline text="notes.opml" created="Wed, 19 May 2021 15:49:32 GMT">
				<outline text="5/19/21; 12:26:52 PM by DW" created="Wed, 19 May 2021 16:26:52 GMT">
					<outline text="Why did the earlier version of this app need a twitter logon? " created="Wed, 19 May 2021 16:26:53 GMT"/>
					<outline text="Each user was reading the Twitter feed itself and storing the results locally. " created="Wed, 19 May 2021 16:28:02 GMT"/>
					<outline text="We could do the same, but it's simpler not to, and get the data from the repo." created="Wed, 19 May 2021 16:28:03 GMT"/>
					<outline text="I'm leaving all the code in here commented out." created="Wed, 19 May 2021 16:29:34 GMT"/>
					</outline>
				<outline text="5/19/21; 11:49:37 AM by DW" created="Wed, 19 May 2021 15:49:35 GMT">
					<outline text="I'm converting this from the former implementation to the the one based on fan accounts on Twitter." created="Wed, 19 May 2021 15:49:37 GMT"/>
					<outline text="Mostly as a warm-up exercise in converting a web-based app into an electron-based app in 2021. " created="Wed, 19 May 2021 15:49:56 GMT"/>
					<outline text="Very rusty! :-)" created="Wed, 19 May 2021 15:50:18 GMT"/>
					</outline>
				</outline>
			<outline text="main.js">
				<outline text="const electronland = require (&quot;electronland&quot;).main;   "/>
				<outline text=""/>
				<outline text="var myConfig = {">
					<outline text="productname: &quot;artshow&quot;," created="Sun, 06 Jan 2013 15:39:06 GMT" pgfnum="16734"/>
					<outline text="productnameForDisplay: &quot;Art Show&quot;," created="Sun, 06 Jan 2013 15:39:06 GMT" pgfnum="16734"/>
					<outline text="description: &quot;An app that shows you art.&quot;," created="Wed, 07 May 2014 12:04:38 GMT" pgfnum="41257"/>
					<outline text="flOpenDevToolsAtStart: false,"/>
					<outline text="version: &quot;0.5.0&quot;," created="Fri, 04 Jan 2013 22:12:08 GMT" pgfnum="16702"/>
					<outline text="indexfilename: &quot;index.html&quot;,"/>
					<outline text="mainWindowWidth: 800,"/>
					<outline text="mainWindowHeight: 900,"/>
					<outline text="appDirname: __dirname"/>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="electronland.init (myConfig, function () {">
					<outline text="});"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;artshow&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.5.0&quot;,"/>
					<outline text="&quot;main&quot;: &quot;main.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daves3&quot;: &quot;*&quot;,"/>
						<outline text="&quot;electronland&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="homepage.js">
				<outline text="var appConsts = {">
					<outline text="urlTwitterServer: &quot;http://twitter.happyfriends.camp/&quot;," isComment="true"/>
					<outline text="version: &quot;0.4.5&quot;"/>
					<outline text="};"/>
					</outline>
				<outline text=""/>
				<outline text="const shell = require (&quot;electronland&quot;).shell; "/>
				<outline text="const s3 = require (&quot;daves3&quot;);"/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text=""/>
				<outline text="var config = {">
					<outline text="screenNames: [">
						<outline text="&quot;ArtPicsChannel&quot;"/>
						<outline text="],"/>
						</outline>
					<outline text="fnameArt: &quot;art.json&quot;,"/>
					<outline text="secsBetwReads: 60 * 5,"/>
					<outline text="flMirrorToS3: true,"/>
					<outline text="&quot;s3path&quot;: &quot;/scripting.com/misc/artshow/&quot;,"/>
					<outline text="archiveFolderName: &quot;archive&quot;,"/>
					<outline text="maxArtItems: 1000 "/>
					<outline text="};"/>
					</outline>
				<outline text=""/>
				<outline text="var artLibrary = {">
					<outline text="theArt: new Array (),"/>
					<outline text="feeds: { //info about each of the twitter feeds">
						<outline text="}"/>
						</outline>
					<outline text="};"/>
					</outline>
				<outline text="var flArtChanged = false;"/>
				<outline text="var lastTweetArray;"/>
				<outline text=""/>
				<outline text="function getUserDataFolder () {">
					<outline text="return (shell.getConfig ().userDataFolder);"/>
					<outline text="}"/>
					</outline>
				<outline text="function artChanged () {">
					<outline text="flArtChanged = true;"/>
					<outline text="}"/>
					</outline>
				<outline text="function initLibraryFeedStats () {" isComment="true">
					<outline text="for (var i = 0; i &lt; config.screenNames.length; i++) {">
						<outline text="var name = config.screenNames [i];"/>
						<outline text="if (artLibrary.feeds [name] === undefined) {">
							<outline text="artLibrary.feeds [name] = {">
								<outline text="whenLastRead: new Date (0),"/>
								<outline text="ctReads: 0"/>
								<outline text="};"/>
								</outline>
							<outline text="artChanged ();"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function loadArt (callback) {" isComment="true">
					<outline text="var f = getUserDataFolder () + config.fnameArt;"/>
					<outline text="fs.readFile (f, function (err, data) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;loadArt: err.message == &quot; + err.message);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="var jstruct = JSON.parse (data);"/>
							<outline text="for (var x in jstruct) {">
								<outline text="artLibrary [x] = jstruct [x];"/>
								<outline text="}"/>
								</outline>
							<outline text="initLibraryFeedStats ();"/>
							<outline text="}"/>
							</outline>
						<outline text="if (callback !== undefined) {">
							<outline text="callback ();"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="if (localStorage.artLibrary !== undefined) {" isComment="true">
						<outline text="var jstruct = JSON.parse (localStorage.artLibrary);"/>
						<outline text="for (var x in jstruct) {">
							<outline text="artLibrary [x] = jstruct [x];"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="callback ();" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text="function saveArt () {" isComment="true">
					<outline text="var f = getUserDataFolder () + config.fnameArt;"/>
					<outline text="var s3path = config.s3path + config.fnameArt;"/>
					<outline text="var jsontext = jsonStringify (artLibrary);"/>
					<outline text="fs.writeFile (f, jsontext, function (err) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;saveArt: err.message == &quot; + err.message);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;saveArt: f == &quot; + f + &quot;, jsontext.length == &quot; + jsontext.length + &quot; chars.&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="}); "/>
						</outline>
					<outline text="if (config.flMirrorToS3) {">
						<outline text="s3.newObject (s3path, jsontext, &quot;application/json&quot;, &quot;public-read&quot;, function (err, data) {">
							<outline text="if (err) {">
								<outline text="console.log (&quot;saveArt: s3path == &quot; + s3path + &quot;, err.message == &quot; + err.message);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="console.log (&quot;saveArt: s3path == &quot; + s3path);"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function findArt (url) {" isComment="true">
					<outline text="for (var i = 0; i &lt; artLibrary.theArt.length; i++) {">
						<outline text="var item = artLibrary.theArt [i];"/>
						<outline text="if (item.url == url) {">
							<outline text="return (item);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (undefined);"/>
					<outline text="}"/>
					</outline>
				<outline text="function writeArray (d, jsontext, callback) {" isComment="true">
					<outline text="var f = getUserDataFolder () + config.archiveFolderName + &quot;/&quot; + getDatePath (d) + config.fnameArt;"/>
					<outline text="fsSureFilePath (f, function () {">
						<outline text="fs.writeFile (f, jsontext, function (err) {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback ();"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function saveTodaysArt () { //7/9/18 by DW" isComment="true">
					<outline text="var theArray = new Array (), now = new Date ();"/>
					<outline text="for (var i = 0; i &lt; artLibrary.theArt.length; i++) {">
						<outline text="var item = artLibrary.theArt [i];"/>
						<outline text="if (sameDay (item.when, now)) {">
							<outline text="theArray.push (item);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="writeArray (now, jsonStringify (theArray), function () {">
						<outline text="console.log (&quot;saveTodaysArt: &quot; + secondsSince (now) + &quot; secs.&quot;);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function breakupArt () { //7/8/18 by DW -- run this once to create separate daily files out of the art.json file" isComment="true">
					<outline text="var curdate = artLibrary.theArt [0].when, curarray = new Array ();"/>
					<outline text="for (var i = 0; i &lt; artLibrary.theArt.length; i++) {">
						<outline text="var item = artLibrary.theArt [i];"/>
						<outline text="if (!sameDay (item.when, curdate)) {">
							<outline text="writeArray (curdate, jsonStringify (curarray));"/>
							<outline text="curdate = item.when;"/>
							<outline text="curarray = new Array ();"/>
							<outline text="}"/>
							</outline>
						<outline text="curarray.push (item);"/>
						<outline text="}"/>
						</outline>
					<outline text="writeArray (curdate, jsonStringify (curarray));"/>
					<outline text="}"/>
					</outline>
				<outline text="function limitArtLibraryLength () {" isComment="true">
					<outline text="var flchange = false;"/>
					<outline text="while (artLibrary.theArt.length &gt; config.maxArtItems) {">
						<outline text="artLibrary.theArt.shift ();"/>
						<outline text="flchange = true;"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flchange) {">
						<outline text="artChanged ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function addWorkOfArt (theArt) { //7/8/18 by DW" isComment="true">
					<outline text="artLibrary.theArt.push (theArt);"/>
					<outline text="limitArtLibraryLength (); //7/11/18 by DW"/>
					<outline text="artChanged ();"/>
					<outline text="console.log (jsonStringify (artLibrary.theArt [artLibrary.theArt.length - 1]));"/>
					<outline text="}"/>
					</outline>
				<outline text="function getArtTweets (screenname, callback) {">
					<outline text="twGetUserInfo (screenname, function (userinfo) {">
						<outline text="if (userinfo !== undefined) {">
							<outline text="twGetUserTweets (userinfo.id_str, undefined, function (tweetArray) {">
								<outline text="var ctNewTweets = 0;"/>
								<outline text="for (var i = 0; i &lt; tweetArray.length; i++) {">
									<outline text="var theTweet = tweetArray [i];"/>
									<outline text="if (theTweet.retweeted_status === undefined) { //it's not a RT">
										<outline text="if (theTweet.entities.media !== undefined) {">
											<outline text="var mediaObject = theTweet.entities.media [0];"/>
											<outline text="if (mediaObject !== undefined) {">
												<outline text="var urlMedia = mediaObject.media_url;"/>
												<outline text="var width = mediaObject.sizes.large.w;"/>
												<outline text="var height = mediaObject.sizes.large.h;"/>
												<outline text="if (findArt (urlMedia) === undefined) {">
													<outline text="addWorkOfArt ({">
														<outline text="text: theTweet.text,"/>
														<outline text="url: urlMedia,"/>
														<outline text="w: width,"/>
														<outline text="h: height,"/>
														<outline text="name: screenname,"/>
														<outline text="id: theTweet.id_str, //7/1/18 by DW -- important to use string, JS can't handle numbers as large as twitter IDs"/>
														<outline text="when: new Date ()"/>
														<outline text="});"/>
														</outline>
													<outline text="artLibrary.theArt.push ({" isComment="true">
														<outline text="text: theTweet.text,"/>
														<outline text="url: urlMedia,"/>
														<outline text="w: width,"/>
														<outline text="h: height,"/>
														<outline text="name: screenname,"/>
														<outline text="id: theTweet.id_str, //7/1/18 by DW -- important to use string, JS can't handle numbers as large as twitter IDs"/>
														<outline text="when: new Date ()"/>
														<outline text="});"/>
														</outline>
													<outline text="console.log (jsonStringify (artLibrary.theArt [artLibrary.theArt.length - 1]));" isComment="true"/>
													<outline text="artChanged ();" isComment="true"/>
													<outline text="ctNewTweets++;"/>
													<outline text="}"/>
													</outline>
												<outline text="}"/>
												</outline>
											<outline text="}"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="console.log (&quot;getArtTweets: there are &quot; + ctNewTweets + &quot; new tweet(s).&quot;);"/>
								<outline text="lastTweetArray = tweetArray; //for debugging"/>
								<outline text="if (callback !== undefined) {">
									<outline text="callback ();"/>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function viewReadingStats () {" isComment="true">
					<outline text="var ct = 0, whenLatestRead = new Date (0);"/>
					<outline text="for (var x in artLibrary.feeds) {">
						<outline text="var feed = artLibrary.feeds [x];"/>
						<outline text="ct += feed.ctReads, when = new Date (feed.whenLastRead);"/>
						<outline text="if (when &gt; whenLatestRead) {">
							<outline text="whenLatestRead = when;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="var timestring = getFacebookTimeString (whenLatestRead, true);"/>
					<outline text="if (timestring == &quot;Just now&quot;) {">
						<outline text="timestring = &quot;0 minutes&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="var s = ct + &quot; reads, &quot; + timestring + &quot; since last read.&quot;;"/>
					<outline text="if ($(&quot;#idReadingStats&quot;).html () != s) {">
						<outline text="$(&quot;#idReadingStats&quot;).html (s);"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everyMinute () {">
					<outline text="var now = new Date ();"/>
					<outline text="if (now.getMinutes () == 0) {" created="Wed, 19 May 2021 16:09:53 GMT">
						<outline text="console.log (&quot;\neveryMinute: &quot; + now.toLocaleTimeString () + &quot;, v&quot; + appConsts.version);"/>
						<outline text="}" created="Wed, 19 May 2021 16:10:02 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {">
					<outline text="switchArtIfReady ();"/>
					<outline text="viewReadingStats ();" isComment="true"/>
					<outline text="initTwitterMenuItems ();" isComment="true"/>
					<outline text="if (flArtChanged) {" isComment="true">
						<outline text="flArtChanged = false;"/>
						<outline text="saveArt ();"/>
						<outline text="saveTodaysArt (); //7/9/18 by DW"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function startup () {">
					<outline text="var options = {">
						<outline text="};"/>
						</outline>
					<outline text="console.log (&quot;startup&quot;);" created="Wed, 19 May 2021 16:08:17 GMT"/>
					<outline text="shell.init (options, function () {">
						<outline text="readArtJson (function () {">
							<outline text="viewRandomArt ();"/>
							<outline text="hitCounter ();"/>
							<outline text="console.log (&quot;There are &quot; + artLibrary.theArt.length + &quot; works of art in the library.&quot;);" created="Wed, 05 May 2021 02:38:36 GMT"/>
							<outline text="self.setInterval (everySecond, 1000); "/>
							<outline text="runEveryMinute (everyMinute);" created="Wed, 05 May 2021 02:42:28 GMT"/>
							<outline text="});"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="styles.css">
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 18px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 600px;"/>
					<outline text="margin-top: 70px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-bottom: 400px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divArtDisplay {">
					<outline text="border: 1px solid silver;" isComment="true"/>
					<outline text="min-width: 800;" isComment="true"/>
					<outline text="min-height: 600;" isComment="true"/>
					<outline text="background-color: white;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".divStats {">
					<outline text="font-size: 15px;"/>
					<outline text="margin-top: 12px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divCheckbox {">
					<outline text="font-size: 15px;"/>
					<outline text="float: left;" isComment="true"/>
					<outline text="margin-bottom: 10px;"/>
					<outline text="display: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divVersionNumber {">
					<outline text="font-size: 12px;"/>
					<outline text="position: fixed;"/>
					<outline text="bottom: 0;"/>
					<outline text="right: 3;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divMenubar .container {">
					<outline text="width: 650px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divReadingStats {">
					<outline text="font-size: 15px;"/>
					<outline text="margin-top: 12px;"/>
					<outline text="color: gray;"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="index.html">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;Art Show&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt; "/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludesForElectron%&gt; "/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/storage/api.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="" created="Wed, 19 May 2021 15:55:40 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/misc/artshow/code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;http://scripting.com/misc/artshow/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="" created="Wed, 19 May 2021 15:55:34 GMT"/>
						<outline text="&lt;script src=&quot;homepage.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;style&gt;" isComment="true" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="body {">
								<outline text="font-family: &quot;Ubuntu&quot;;"/>
								<outline text="background-color: whitesmoke;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divPageBody {">
								<outline text="font-size: 28px;"/>
								<outline text="line-height: 140%;"/>
								<outline text="width: 80%;"/>
								<outline text="margin-top: 90px;"/>
								<outline text="margin-left: auto;"/>
								<outline text="margin-right: auto;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divMessages {">
								<outline text="text-align: center;"/>
								<outline text="margin-top: 25%;"/>
								<outline text="}"/>
								</outline>
							<outline text=".divVersionNumber {" isComment="true">
								<outline text="font-size: 12px;"/>
								<outline text="float: right;"/>
								<outline text="padding: 0;"/>
								<outline text="padding: 12px;" isComment="true"/>
								<outline text="display: none;" isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divVersionNumber&quot; id=&quot;idVersionNumber&quot;&gt;&lt;/div&gt;"/>
						<outline text="&lt;div class=&quot;divMenubar&quot; id=&quot;idMenubar&quot;&gt;" created="Thu, 28 Mar 2013 21:39:05 GMT" pgfnum="21615">
							<outline text="&lt;div class=&quot;topbar-wrapper&quot;&gt;">
								<outline text="&lt;div class=&quot;navbar navbar-fixed-top&quot; data-dropdown=&quot;dropdown&quot;&gt;">
									<outline text="&lt;div class=&quot;navbar-inner&quot;&gt;">
										<outline text="&lt;div class=&quot;container&quot;&gt;">
											<outline text="&lt;a class=&quot;brand&quot; href=&quot;/&quot;&gt;&lt;span id=&quot;idMenuProductName&quot;&gt;&lt;/span&gt;&lt;/a&gt;"/>
											<outline text="&lt;ul class=&quot;nav&quot; id=&quot;idMainMenuList&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Menu&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a href=&quot;http://this.how/artshow&quot;&gt;Docs&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;shell.openUserDataFolder ();&quot;&gt;Open data folder&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idFileMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;File&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;newFileCommand ();&quot;&gt;New file...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;openFileCommand ();&quot;&gt;Open file...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;addTabCommand ();&quot;&gt;Add tab...&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;closeTabCommand ();&quot;&gt;Close&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;viewOutlineOpml ();&quot;&gt;View OPML...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;titleDescriptionDialog ();&quot;&gt;Set title &amp; description...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;editOpmlHeaders ();&quot;&gt;Edit OPML headers...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;runCursorScript ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-/&lt;/span&gt;Run Selection&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;makeOutlinePublic ();&quot;&gt;Make outline public...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;subscribeToInstantOutlineCommand ();&quot;&gt;Subscribe to outline...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;dropdown-submenu&quot;&gt;">
															<outline text="&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot;&gt;Special files...&lt;/a&gt;">
																<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
																	<outline text="&lt;li&gt;&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot; onclick=&quot;openMenubarOpml ()&quot;&gt;Menubar...&lt;/a&gt;&lt;/li&gt;"/>
																	<outline text="&lt;li&gt;&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot; onclick=&quot;openIconbarOpml ()&quot;&gt;Iconbar...&lt;/a&gt;&lt;/li&gt;"/>
																	<outline text="&lt;li&gt;&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot; onclick=&quot;openBookmarksOpml ()&quot;&gt;Bookmarks...&lt;/a&gt;&lt;/li&gt;"/>
																	</outline>
																<outline text="&lt;/ul&gt;"/>
																</outline>
															<outline text="&lt;/li&gt;"/>
															</outline>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;shell.openUserDataFolder ();&quot;&gt;Open data folder&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idOutlinerMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Outliner&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpand ();&quot;&gt;Expand&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpandAllLevels ();&quot;&gt;Expand All Subs&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opExpandEverything ();&quot;&gt;Expand Everything&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opCollapse ();&quot;&gt;Collapse&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opCollapseEverything ();&quot;&gt;Collapse Everything&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opDeleteLine ();&quot;&gt;Delete Line&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;dropdown-submenu&quot;&gt;">
															<outline text="&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot;&gt;Build...&lt;/a&gt;">
																<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
																	<outline text="&lt;li&gt;&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot; onclick=&quot;buildListicle ()&quot;&gt;Listicle&lt;/a&gt;&lt;/li&gt;"/>
																	<outline text="&lt;li&gt;&lt;a href=&quot;#&quot; tabindex=&quot;-1&quot; onclick=&quot;buildStatusCenter ()&quot;&gt;Status Center&lt;/a&gt;&lt;/li&gt;"/>
																	</outline>
																<outline text="&lt;/ul&gt;"/>
																</outline>
															<outline text="&lt;/li&gt;"/>
															</outline>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opFindCommand ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-F&lt;/span&gt;Find...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opFindAgainCommand ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-G&lt;/span&gt;Find again&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleRenderMode ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-`&lt;/span&gt;&lt;span id=&quot;idRenderModeCommandString&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;" created="Sun, 28 Jul 2013 18:38:02 GMT" pgfnum="28370"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idReorgMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Reorg&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (up, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-U&lt;/span&gt;Move Up&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (down, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-D&lt;/span&gt;Move Down&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (left, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-L&lt;/span&gt;Move Left&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opReorg (right, 1);&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-R&lt;/span&gt;Move Right&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="" created="Mon, 12 May 2014 23:20:46 GMT" pgfnum="41579"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleArrowPad ();&quot;&gt;&lt;span id=&quot;idArrowPadCommandString&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;" created="Sun, 28 Jul 2013 18:38:02 GMT" pgfnum="28370"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opToggleComment ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-\&lt;/span&gt;Comment&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;" created="Sun, 28 Jul 2013 18:38:02 GMT" pgfnum="28370"/>
														<outline text="" created="Sat, 07 Sep 2013 16:56:40 GMT" pgfnum="29953"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opPromote ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-[&lt;/span&gt;Promote&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;opDemote ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-]&lt;/span&gt;Demote&lt;/a&gt;&lt;/li&gt;"/>
														<outline text=""/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleRenderMode ();&quot;&gt;&lt;span class=&quot;menuKeystroke&quot;&gt;Cmd-`&lt;/span&gt;&lt;span id=&quot;idRenderModeCommandString&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;" created="Sun, 28 Jul 2013 18:38:02 GMT" pgfnum="28370"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idDocsMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Docs&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;TBD&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown desktopOnly&quot; id=&quot;idBookmarksMenu&quot; style=&quot;display: none;&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Bookmarks&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot; id=&quot;idBookmarksList&quot;&gt;">
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;ul class=&quot;nav pull-right&quot; style=&quot;display: none&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;&lt;span id=&quot;idTwitterIcon&quot;&gt;&lt;/span&gt;&lt;span id=&quot;idTwitterUsername&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;aboutDialog ();&quot;&gt;About &lt;span id=&quot;idMenuAboutProductName&quot;&gt;&lt;/span&gt;...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;openSettingsDialog ();&quot;&gt;Settings...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;shell.toggleTwitterConnect ();&quot; id=&quot;idTwitterConnectMenuItem&quot;&gt;&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Thu, 28 Mar 2013 21:39:17 GMT" pgfnum="21616"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot; id=&quot;idPageBody&quot;&gt;">
							<outline text="&lt;center&gt;">
								<outline text="&lt;div class=&quot;divReadingStats&quot; id=&quot;idReadingStats&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divTopStatusLine&quot;&gt;" isComment="true">
									<outline text="&lt;div class=&quot;divPausedMessage&quot; id=&quot;idPausedMessage&quot;&gt;">
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;div class=&quot;divHowToLink&quot; id=&quot;idHowToLink&quot;&gt;">
										<outline text="&lt;a href=&quot;http://this.how/artshow/&quot; target=&quot;_blank&quot; title=&quot;Click here to see the docs for this app.&quot;&gt;ABOUT&lt;/a&gt;"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divArtDisplay&quot; id=&quot;idArtDisplay&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divStats&quot; id=&quot;idStats&quot;&gt;">
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divCheckbox&quot;&gt;">
									<outline text="&lt;input type=&quot;checkbox&quot; id=&quot;idRandomArtDisplay&quot; checked&gt; Update display"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/center&gt;"/>
								</outline>
							<outline text="&lt;div id=&quot;idNotLoggedonMessage&quot; style=&quot;display: none;&quot;&gt;">
								<outline text="Sign on to get a personalized greeting."/>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="scripts" isComment="true">
				<outline text="sudo electron-packager . &quot;Art Show&quot; --platform=darwin --arch=all --overwrite --electron-version=1.7.6 --icon=house.icns"/>
				</outline>
			</outline>
		<outline text="build script">
			<outline text="nodeeditorsuite.utilities.buildArtShow ()">
				<outline text="&quot;7/2/18; 2:11:19 PM&quot;" isComment="true"/>
				</outline>
			</outline>
		</body>
	</opml>
